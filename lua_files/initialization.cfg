{EOHS_LUA_FILE (<<-- initialization.cfg
-- #textdomain wesnoth-Era_of_High_Sorcery

EoHS.init_campaign = function(player_picks_settings)
  EoHS.make_settings_default()
  EoHS.set_variable("show_menu_item", false)
  wesnoth.fire("set_menu_item", {
    id = "EoHS_menu_item",
    image = "attacks/staff-magic.png~SCALE(36,36)",
    description = _"EoHS actions",
    { "show_if", {
      { "variable", {
        name="EoHS.show_menu_item",
        boolean_equals="true",
      }}
    }},
    { "command", {
      { "lua", {
        code = "EoHS.menu_item_invoked()"
      }},
    }},
  })
  local leaders = EoHS.get_units({ canrecruit=true, type="Red Mage" })
  for i,leader in ipairs(leaders) do
    EoHS.set_unit_variable(leader, "is_starting_wizard", true)
    EoHS.put_unit(leader)
  end
  EoHS.init_scenario()
  
  if player_picks_settings then
    EoHS.create_settings_picking_event()
  else
    EoHS.init_campaign_with_settings()
  end
end

EoHS.init_scenario = function()
  for i,event in pairs(EoHS.events) do
    wesnoth.fire("event", event)
  end
  EoHS.set_variable("scenario_inited", true)
end

EoHS.init_campaign_with_settings = function()
  EoHS.set_variable("show_menu_item", true)
end

EoHS.set_simple_event("preload", function()
  wesnoth.fire("insert_tag", {
    name = "command",
    variable = "EoHS.preload"
  })
end)

local scenario_over_event = function()
  EoHS.set_variable("show_menu_item", false)
  EoHS.set_variable("scenario_inited", false)
end
EoHS.set_simple_event("victory", scenario_over_event)
EoHS.set_simple_event("defeat", scenario_over_event)

EoHS.next_scenario_initing_event_names = {
  "prestart", "start", "side_turn", "turn_refresh", "recruit", "moveto"
  -- deliberately omitted: attack, preload
}
EoHS.next_scenario_initing_event = function(name)
  return { "event", {
    name = name,
    id = "EoHS_next_scenario_initing_event_"..name,
    first_time_only = "no",
    { "filter_condition", {
      { "variable", {
        name = "EoHS.scenario_inited",
        boolean_equals = false
      }},
    }},
    { "insert_tag", {
      name = "command",
      variable = "EoHS.preload"
    }},
    { "lua", {
      code = "EoHS.init_scenario()"
    }},
  }}
end

EoHS.require_next_scenario_initing_events = function(unit)
  for i,subtag in ipairs(unit) do
    if subtag[2].id == "EoHS_next_scenario_initing_event_"..EoHS.next_scenario_initing_event_names[0] then
      return
    end
  end
  for i,name in ipairs(EoHS.next_scenario_initing_event_names) do
    table.insert(unit, EoHS.next_scenario_initing_event(name))
  end
end

>>)}
