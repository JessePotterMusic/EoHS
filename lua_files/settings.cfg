{EOHS_LUA_FILE (<<-- settings.cfg
-- #textdomain wesnoth-Era_of_High_Sorcery

EoHS.default_wizard_settings = {
  can_spend_gold_on_spells = true,
  can_recruit = true,
  starting_level = 2,
  skill_points_per_level = 4,
  skill_points_at_level_0 = 2,
  summon_duration = "infinite",
  summons_disappear_with_summoner = false,
  summon_cost_multiplier = 1,
  summon_experience_transfer = 0.25,
  mana_income_per_level = 2,
  mana_capacity_per_level = "infinite",
}
EoHS.rpg_wizard_settings = EoHS.deep_copy(EoHS.default_wizard_settings)
EoHS.rpg_wizard_settings.can_spend_gold_on_spells = false
EoHS.rpg_wizard_settings.can_recruit = false
EoHS.rpg_wizard_settings.starting_level = 1
EoHS.rpg_wizard_settings.summon_duration = 3
EoHS.rpg_wizard_settings.summons_disappear_with_summoner = true
EoHS.rpg_wizard_settings.summon_cost_multiplier = 0.5
EoHS.rpg_wizard_settings.summon_experience_transfer = 1
EoHS.rpg_wizard_settings.mana_income_per_level = 4
EoHS.rpg_wizard_settings.mana_capacity_per_level = 15

EoHS.default_settings = {
  { "wizard_default", EoHS.default_wizard_settings }
}
EoHS.rpg_settings = {
  { "wizard_default", EoHS.rpg_wizard_settings }
}

EoHS.map_specific_default_settings = function()
  return EoHS.default_settings, false
end

EoHS.create_settings_picking_event = function()
  wesnoth.fire("event", { name = "side_turn",
    { "lua", { code = 'EoHS.settings_picking_event()' }}
  })
end

local g = function(contents) return { "grid", contents } end
local r = function(contents) return { "row", contents } end
local c = function(contents) return { "column", contents } end
--[[
EoHS.settings_dialog_grid = function(dialog_context, settings, mutable)
  local customize_skillset_func = function(side)
  
  local customize_buttons_rows = {}
  local customize_skillset_button_name
  if mutable then
    local customize_skillset_button = dialog_context.button({label=_"Customize starting skills"}, customize_skillset_func("default"))
    local decustomize_skillset_button = {"spacer",{}}
    if EoHS.get_subtag(settings, "side_default.starting_skillset") then decustomize_skillset_button = dialog_context.button({label=_"Customize starting skills"}, customize_skillset_func("default")) end
    table.insert(customize_buttons_rows, r{c{customize_skillset_button}, r{c{decustomize_skillset_button}}}
  else
    if EoHS.get_subtag(settings, "side_default.starting_skillset") then
      table.insert(customize_buttons_rows, r{c{dialog_context.button({label=_"View starting skills"}, customize_skillset_func("default"))}})
    end
  end
  local 
end]]

EoHS.current_player_picks_settings = function()
  local map_default_settings, separate_map_default = EoHS.map_specific_default_settings()
  
  local current_settings = map_default_settings
  local show_dialog = function()
    local d = EoHS.make_dialog_context(function() end, show_dialog)
  end
end
--[[
EoHS.settings_picking_event = function()
  local choice = EoHS.synchronize_choice(EoHS.current_player_picks_settings, function() return { ai_chose=true } end)
  
  if choice.ai_chose then
    EoHS.create_settings_picking_event()
  else
    choice.inited = true
    EoHS.set_variable("settings", choice)
    EoHS.init_campaign_with_settings()
  end
end]]

EoHS.get_wizard_settings = function(unit)
  return EoHS.get_unit_variable(unit, "settings")
end
EoHS.get_wizard_setting = function(unit, name)
  return EoHS.get_unit_variable(unit, "settings."..name)
end
EoHS.init_wizard_settings = function(wizard_settings)
  local defaults = EoHS.get_variable("settings.wizard_default")
  for k,v in pairs(defaults) do
    if wizard_settings[k] == nil then wizard_settings[k] = v end
  end
end
--[[
EoHS.get_settings_for_side = function(side)
  local settings = EoHS.get_variable("settings")
  if not settings then EoHS.err("EoHS.get_settings_for_side called, no settings found") end
  if not settings.inited then EoHS.err("EoHS.get_settings_for_side called, settings not inited") end
  local side_specific = EoHS.get_subtag(settings, "side_"..side)
  if side_specific then return side_specific else return EoHS.get_subtag(settings, "side_default") end
end]]

>>)}
