{EOHS_LUA_FILE (<<-- summons.cfg
-- #textdomain wesnoth-Era_of_High_Sorcery
local getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack = getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack
local wesnoth,table,string,math,os,debug,helper,_,EoHS,_G,_ENV = wesnoth,table,string,math,os,debug,EoHS.helper,EoHS._,EoHS,_G,nil

EoHS.make_summoning_spell("summon_arctic_drake", {
  type = "Drake Fighter",
  language_name = _"Arctic Drake", -- TODO: If this hasn't yet been added to 1.11, submit a FR
  cost = 20,
  { "modifications", {
    { "advance", {
      { "effect", {
        apply_to = "image_mod",
        add = "~RC(drake_fighter_palette>blue_drake_range)",
        { "color_palette", {
          drake_fighter_palette = "86ac53,fde9f1,fde6ef,fadb85,f7df8e,f6db84,dfc799,c7d95e,c3d355,c1d553,c19057,a2c157,9dba50,99b94e,7ca448,679345,5e8d44,57624d,573d2d,53844a,4c5742,4a5640,487a3f,3c513e,324634,2d4331,242e12,1c250d,151f06,100506",
        }},
        { "color_range", {
          id = "blue_drake_range",
          rgb = "8888ff,ffffff,000000",
        }},
      }},
      { "effect", {
        apply_to = "resistance",
        replace = "true",
        { "resistance", {
          cold = 80,
          arcane = 80,
        }},
      }},
      -- I didn't originally intend to change its snow movement/defense, but the "arctic" theme requires me to (and I have nothing against it)
      { "effect", { apply_to = "movement_costs", replace = "true", { "movement_costs", { frozen = 1, }}, }},
      { "effect", { apply_to = "defense",        replace = "true", { "defense",        { frozen = 60, }}, }},
    }}
  }}
}, {
  name = _"Summon Arctic Drake",
  base_cost = { action_points = 6 },
  description = EoHS.summoning_spell_description(_"Arctic Drake").._" Arctic Drakes are Drake Fighters with 20% cold/arcane resistance and 1 move/40% defense on snow and ice.",
})


EoHS.make_summoning_spell("summon_wolf", {type="Wolf",cost=15}, {
  image = { offset={x=-6,y=-5} },
  base_cost = { action_points = 6 },
})

local necro_summon_AP_cost = function(parameters)
  return 7 - math.min(3, EoHS.skillset_realm_rank(EoHS.get_unit_skillset(EoHS.get_unit(parameters.actor_id)), "necromancy"))
end
local necro_summon_AP_description = _"The base AP cost of this spell is 7 - your Necromancy rank, to a minimum of 4."

EoHS.make_summoning_spell("summon_vampire_bat", {type="Vampire Bat"}, {
  base_cost = function(parameters) return { action_points = necro_summon_AP_cost(parameters), mana = 13 } end,
  description = EoHS.summoning_spell_description(_"Vampire Bat").." "..necro_summon_AP_description
})

EoHS.make_summoning_spell("summon_ghost", {type="Ghost",cost=16}, { base_cost = { action_points = 6 } })

EoHS.make_summoning_spell("summon_skeleton", {type="Skeleton"}, {
  image = { offset={x=5,y=0} },
  base_cost = function(parameters) return { action_points = necro_summon_AP_cost(parameters), mana = 15 } end,
  description = EoHS.summoning_spell_description(_"Skeleton").." "..necro_summon_AP_description
})
EoHS.make_summoning_spell("summon_skeleton_archer", {type="Skeleton Archer"}, {
  image = { offset={x=-3,y=0} },
  base_cost = function(parameters) return { action_points = necro_summon_AP_cost(parameters), mana = 14 } end,
  description = EoHS.summoning_spell_description(_"Skeleton Archer").." "..necro_summon_AP_description
})

--[[

function set_dire_advancement(unit)
  if unit_has_eohs_special(unit, "is_dire") then
    unit.advances_to = "null"
  else
    unit.advances_to = unit.type
    unit.max_experience = math.floor(unit.max_experience * 0.74)
  end
end

function set_dire_L2_level(unit)
  if unit_has_eohs_special(unit, "is_dire") then
    unit.level = 3
  else
    unit.level = 2
  end
end

dire_attributes = { max_hitpoints = true, max_moves = true, max_experience = true, advances_to = true, level = true, attack = true, }

function become_dire_sea_serpent(unit)
  if not unit_has_eohs_special(unit, "is_dire") then
    set_unit_eohs_special(unit, "is_dire")
    unit.name = _"Greater Sea Serpent"
    local modifications = ensure_presence_of_and_get_subtag(unit, "modifications")
    table.insert(modifications, 1, { "object", {
      { "effect", {
        apply_to = "attack",
        name = "fangs",
        increase_attacks = 1
      }},
      { "effect", {
        apply_to = "hitpoints",
        increase_total = 12
      }},
      { "effect", {
        apply_to = "movement",
        increase = 2
      }},
      { "effect", {
        apply_to = "image_mod",
        add = "~CS(-60,-60,0)"
      }}
    }})
    
    regenerate_unit_attributes(unit, dire_attributes)
    unit.hitpoints = unit.max_hitpoints
    set_unit_subtag_value(unit, "status", "poisoned", false)
    set_unit_subtag_value(unit, "status", "slowed", false)
  end
end

table.insert(EoHS_spells, { "summon_sea_serpent", {
  is_summon = true,
  base_range = "adjacent",
  name = _"Summon Sea Serpent",
  description = _"Sea Serpents have their level artificially reduced to 2 because they don't really have the power of a level 3 unit.",
  image_xoffs = -3,
  image_yoffs = 2,
  { "realm_allowance", {
    realm = "evocation",
    level = 9,
  }},

  { "summon", {
    type = "Sea Serpent",
    cost = 41,
    { "variables", {
      { "after_regenerating_level", {
        lua_function = "set_dire_L2_level"
      }},
      { "after_regenerating_advances_to", {
        lua_function = "set_dire_advancement"
      }},
      { "on_post_advance_event", {
        lua_function = "become_dire_sea_serpent"
      }}
    }}
  }},
}})

--  this is used by Monsters' Nest
function set_level_to_2(unit)
  unit.level = 2
end

table.insert(EoHS_spells, { "summon_fire_dragon", {
  is_summon = true,
  base_range = "adjacent",
  name = _"Summon Fire Dragon",
  --image = "units/monsters/fire-dragon.png~CROP(6,10,144,144)~SCALE(72,72)",
  --image = "units/monsters/fire-dragon.png~CROP(78,47,72,72)",
  image_xoffs = -45,
  image_yoffs = 18,
  { "realm_allowance", {
    realm = "evocation",
    level = 11,
  }},

  { "summon", {
    type = "Fire Dragon",
    cost = 101,
  }},
}})

function set_wolf_advancements(unit)
  if unit.type == "Wolf" then
    unit.advances_to = "Great Wolf"
    unit.max_experience = math.floor(unit.max_experience * 0.6)
  elseif unit.type == "Great Wolf" then
    unit.advances_to = "Direwolf"
    unit.max_experience = math.floor(unit.max_experience * 0.65)
  end
end

wolf_summon = { "summon", {
  type = "Wolf",
  cost = 15,
  { "variables", {
    { "after_regenerating_advances_to", {
      lua_function = "set_wolf_advancements"
    }}
  }},
  { "modifications", {
    { "object", {
      { "effect", {
        apply_to = "attack",
        increase_damage = -2,
      }},
      { "effect", {
        apply_to = "attack",
        times = "per level",
        increase_damage = 2,
      }}
    }}
  }}
}}

table.insert(EoHS_spells, { "summon_wolf", {
  is_summon = true,
  base_range = "adjacent",
  name = _"Summon Wolf",
  description = _"Wolves can advance to Great Wolves and Direwolves.",
  image_xoffs = -1,
  image_yoffs = -7,
  { "realm_allowance", {
    realm = "nature_magic",
    level = 1,
  }},

  wolf_summon,
}})

table.insert(EoHS_spells, { "summon_two_wolves", {
  is_summon = true,
  base_range = "adjacent",
  name = _"Summon Two Wolves",
  image_xoffs = -1,
  image_yoffs = -7,
  { "realm_allowance", {
    realm = "nature_magic",
    level = 5,
  }},

  summon_two = true,

  wolf_summon,
}})

table.insert(EoHS_spells, { "summon_wose", {
  is_summon = true,
  base_range = "adjacent",
  name = _"Summon Wose",
  image_xoffs = 0,
  image_yoffs = 2,
  { "realm_allowance", {
    realm = "nature_magic",
    level = 4,
  }},

  { "summon", {
    type = "Wose",
    cost = 18,
  }},
}})

function become_dire_water_serpent(unit)
  if not unit_has_eohs_special(unit, "is_dire") then
    set_unit_eohs_special(unit, "is_dire")
    unit.name = _"Greater Water Serpent"
    local modifications = ensure_presence_of_and_get_subtag(unit, "modifications")
    table.insert(modifications, 1, { "object", {
      { "effect", {
        apply_to = "attack",
        name = "fangs",
        increase_attacks = 1,
        increase_damage = 1
      }},
      { "effect", {
        apply_to = "hitpoints",
        increase_total = 12
      }},
      { "effect", {
        apply_to = "movement",
        increase = 1
      }},
      { "effect", {
        apply_to = "image_mod",
        add = "~CS(-60,-60,0)"
      }}
    }})
    
    regenerate_unit_attributes(unit, dire_attributes)
    unit.hitpoints = unit.max_hitpoints
    set_unit_subtag_value(unit, "status", "poisoned", false)
    set_unit_subtag_value(unit, "status", "slowed", false)
  end
end

table.insert(EoHS_spells, { "summon_water_serpent", {
  is_summon = true,
  base_range = "adjacent",
  name = _"Summon Water Serpent",
  image_xoffs = -6,
  image_yoffs = -1,
  { "realm_allowance", {
    realm = "nature_magic",
    level = 5,
  }},

  { "summon", {
    type = "Water Serpent",
    cost = 24,
    { "variables", {
      { "after_regenerating_level", {
        lua_function = "set_dire_L2_level"
      }},
      { "after_regenerating_advances_to", {
        lua_function = "set_dire_advancement"
      }},
      { "on_post_advance_event", {
        lua_function = "become_dire_water_serpent"
      }}
    }},
  }},
}})


function become_dire_gryphon(unit)
  if not unit_has_eohs_special(unit, "is_dire") then
    
    set_unit_eohs_special(unit, "is_dire")
    unit.name = _"Dire Gryphon"
    local modifications = ensure_presence_of_and_get_subtag(unit, "modifications")
    table.insert(modifications, 1, { "object", {
      { "effect", {
        apply_to = "attack",
        name = "claws",
        increase_damage = 4
      }},
      { "effect", {
        apply_to = "hitpoints",
        increase_total = 24
      }},
      { "effect", {
        apply_to = "movement",
        increase = 1
      }},
      { "effect", {
        apply_to = "image_mod",
        add = "~CS(0,-20,-60)"
      }}
    }})
    
    regenerate_unit_attributes(unit, dire_attributes)
    unit.hitpoints = unit.max_hitpoints
    set_unit_subtag_value(unit, "status", "poisoned", false)
    set_unit_subtag_value(unit, "status", "slowed", false)
  end
end

table.insert(EoHS_spells, { "summon_gryphon", {
  is_summon = true,
  base_range = "adjacent",
  name = _"Summon Gryphon",
  description = _"Gryphons can advance to Dire Gryphons.",
  image_xoffs = -1,
  image_yoffs = -4,
  { "realm_allowance", {
    realm = "nature_magic",
    level = 8,
  }},

  { "summon", {
    type = "Gryphon",
    cost = 28,
    { "variables", {
      { "after_regenerating_level", {
        lua_function = "set_dire_L2_level"
      }},
      { "after_regenerating_advances_to", {
        lua_function = "set_dire_advancement"
      }},
      { "on_post_advance_event", {
        lua_function = "become_dire_gryphon"
      }}
    }},
  }},
}})

table.insert(EoHS_spells, { "summon_yeti", {
  is_summon = true,
  base_range = "adjacent",
  name = _"Summon Yeti",
  image_xoffs = -6,
  image_yoffs = 8,
  { "realm_allowance", {
    realm = "nature_magic",
    level = 11,
  }},

  { "summon", {
    type = "Yeti",
    cost = 92,
  }},
}})



table.insert(EoHS_spells, { "summon_walking_corpse", {
  is_summon = true,
  base_range = "adjacent",
  name = _"Summon Walking Corpse",
  { "realm_allowance", {
    realm = "necromancy",
    level = 4,
  }},

  is_instant = true,
  fixed_price = true,

  { "summon", {
    type = "Walking Corpse",
  }},
}})

function set_chocobone_advancement(unit)
  if unit.type == "Chocobone" then
    unit.advances_to = "Death Knight"
    unit.max_experience = math.floor(unit.max_experience * 0.9)
  end
end

function become_chocobone_knight(unit)
  if unit.type == "Chocobone" then
    set_unit_eohs_special(unit, "is_chocobone_knight")
    local modifications = ensure_presence_of_and_get_subtag(unit, "modifications")
    table.insert(modifications, 1, { "object", {
      { "effect", {
        apply_to = "attack",
        name = "battle axe",
        increase_damage = -2
      }},
      { "effect", {
        apply_to = "new_attack",
        name = "spear",
        description = _"spear",
        type = "pierce",
        range = "melee",
        damage = 14,
        number = 2,
        { "specials", wesnoth.get_variable("charge_special") }
      }},
      { "effect", {
        apply_to = "movement",
        set = 9
      }}
    }})
  end
end

table.insert(EoHS_spells, { "summon_chocobone", {
  is_summon = true,
  base_range = "adjacent",
  name = _"Summon Chocobone",
  image_xoffs = -4,
  image_yoffs = 8,
  { "realm_allowance", {
    realm = "necromancy",
    level = 6,
  }},

  { "summon", {
    type = "Chocobone",
    cost = 28,
    { "variables", {
      { "after_regenerating_advances_to", {
        lua_function = "set_chocobone_advancement"
      }},
      { "on_advance_event", {
        lua_function = "become_chocobone_knight"
      }}
    }},
  }},
}})


table.insert(EoHS_spells, { "summon_skeletal_dragon", {
  is_summon = true,
  base_range = "adjacent",
  name = _"Summon Skeletal Dragon",
  image_xoffs = -10,
  image_yoffs = 5,
  { "realm_allowance", {
    realm = "necromancy",
    level = 11,
  }},

  { "summon", {
    type = "Skeletal Dragon",
    cost = 86,
  }},
}})]]

>>)}
