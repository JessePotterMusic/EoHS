{EOHS_LUA_FILE (<<-- poison_ground.cfg
-- #textdomain wesnoth-Era_of_High_Sorcery
local getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack = getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack
local wesnoth,table,string,math,os,debug,helper,_,EoHS,_G,_ENV = wesnoth,table,string,math,os,debug,EoHS.helper,EoHS._,EoHS,_G,nil

local poison_overlay = "terrain/alphamask.png~G(255)~O(0.2)~BLIT(items/potion-poison.png)"
local get_poisoned = function(x,y)
  return EoHS.get_variable("scenario.poison_ground."..x.."_"..y)
end
local set_poisoned = function(x,y,val)
  if get_poisoned(x,y) ~= val then
    EoHS.set_variable("scenario.poison_ground."..x.."_"..y, val)
    if val then
      wesnoth.fire("item", { x=x,y=y, image = poison_overlay })
    else
      wesnoth.fire("remove_item", { x=x,y=y, image = poison_overlay })
    end
  end
end

local affected_hexes_func = function(parameters, known_or_actual)
  local result = {}
  for i,hex in ipairs(EoHS.find_reach(parameters.target_x, parameters.target_y, (known_or_actual == "actual") and EoHS.passable_only or EoHS.known_passable_only(wesnoth.current.side), 2)) do
    table.insert(result, {x=hex.x, y=hex.y, visual="harm"})
  end
  return result
end
local get_stuff = function(affected_hexes)
  local unpoisoned = {}
  for i,hex in ipairs(affected_hexes) do
    if not get_poisoned(hex.x,hex.y) then
      table.insert(unpoisoned, hex)
    end
  end
  local num_to_poison = math.min(#unpoisoned, math.ceil(#affected_hexes * 0.7))
  local chance = math.floor((100 * num_to_poison / #unpoisoned) + 0.5)
  
  return unpoisoned,num_to_poison,chance
end

EoHS.make_spell("poison_ground", {
  image = "attacks/touch-undead.png",
  name = _"Poison Ground",
  description = _"Permanently corrupts most hexes in a diameter-5 circle around the target. Units on the corrupted hexes become poisoned at the end of any turn. This spell affects at least 70% of the hexes in the area, chosen at random, but favoring hexes that are not yet poisoned (so a second casting reliably fills the remaining area).",
  
  base_cost = { action_points=6, mana=15 },
  base_range = 3,
  target_type = EoHS.target_types.hex,
  
  affected_hexes = affected_hexes_func,
  
  make_extra_attributes = function(parameters, make_aspect)
    local unpoisoned,num_to_poison,chance = get_stuff(affected_hexes_func(parameters, "known"))
    make_aspect.type_value_and_details(_"Hexes to poison", num_to_poison, "")
    make_aspect.type_value_and_details(_"Chance to poison", chance.."%", _"for each hex")
  end,
  
  happen = function(parameters)
    wesnoth.fire("sound", { name = "poison.ogg" })
    EoHS.begin_casting(parameters.actor_id, parameters.target_x, parameters.target_y)
    
    local unpoisoned,num_to_poison,chance = get_stuff(affected_hexes_func(parameters, "actual"))
    while num_to_poison > 0 do
      local which = EoHS.random("1.."..#unpoisoned)
      set_poisoned(unpoisoned[which].x, unpoisoned[which].y, true)
      table.remove(unpoisoned, which)
      num_to_poison = num_to_poison - 1
    end
    
    EoHS.finish_casting(parameters.actor_id)
  end,
})

>>)}
