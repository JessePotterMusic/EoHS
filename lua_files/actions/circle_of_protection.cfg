{EOHS_LUA_FILE (<<-- circle_of_protection.cfg
-- #textdomain wesnoth-Era_of_High_Sorcery
local getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack = getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack
local wesnoth,table,string,math,os,debug,helper,_,EoHS,_G,_ENV = wesnoth,table,string,math,os,debug,EoHS.helper,EoHS._,EoHS,_G,nil

local circle_of_protection_overlay = function(side)
  -- The circle has too many colors to TC the regular way, and I'm not sure I like its colors anyway...
  return "scenery/circle-magic-glow.png~GS()"..EoHS.TC_like_CS(side, function(c) return c-127 end).."~O(2.5)~SCALE(120,144)"
end
EoHS.get_circle_of_protection = function(x, y)
  return EoHS.get_hex_variable(x, y, "circle_of_protection")
end
EoHS.set_circle_of_protection = function(x, y, val)
  local old_val = EoHS.get_circle_of_protection(x, y)
  if old_val ~= val then
    EoHS.set_hex_variable(x, y, "circle_of_protection", val)
    if old_val then
      EoHS.remove_item({x=x,y=y,halo=circle_of_protection_overlay(old_val)})
    end
    if val then
      EoHS.place_item ({x=x,y=y,halo=circle_of_protection_overlay(    val)})
    end
  end
end
EoHS.location_is_enemy_circle_of_protection = function(x, y, side)
  local circle = EoHS.get_circle_of_protection(x, y)
  return (circle and wesnoth.is_enemy(circle, side))
end

_G.wunit_is_in_enemy_circle_of_protection = function(wunit)
  return EoHS.location_is_enemy_circle_of_protection(wunit.x, wunit.y, wunit.side)
end
_G.wunit_is_in_any_circle_of_protection = function(wunit)
  return EoHS.get_circle_of_protection(wunit.x, wunit.y)
end
table.insert(EoHS.events, {
  name = "moveto",
  first_time_only = "no",
  { "filter", {
    lua_function = "wunit_is_in_enemy_circle_of_protection",
  }},
  { "lua", {
    code = "EoHS.set_circle_of_protection(wesnoth.current.event_context.x1, wesnoth.current.event_context.y1)" -- TODO cooler animation?
  }},
})

EoHS.make_spell("circle_of_protection", {
  image = "icons/stone_ring.png",
  name = _"Circle of Protection",
  description = _"You enchant a hex with a circle of protection. The circle blocks enemy wizards' magic as if it was a solid wall, and also blocks the harmful effects of your own and allies' spells. Furthermore, units in circles of protection take half damage on defense. There is no limit to how long a circle of protection lasts, but it disappears if an enemy unit enters it.",
  
  is_enchantment = true,
  
  base_cost = { action_points=7, mana=18 },
  base_range = 1,
  target_type = function(parameters)
    local actor = EoHS.get_unit(parameters.actor_id)
    local unit = EoHS.get_seen_unit(parameters.target_x,parameters.target_y,wesnoth.current.side)
    local circle = EoHS.get_circle_of_protection(parameters.target_x,parameters.target_y)
    local details,validity = "","valid"
    if circle and not wesnoth.is_enemy(actor.side, circle) then
      validity = "impossible"
      details = _"There is already an allied circle of protection there."
    elseif not EoHS.hex_is_unfogged(parameters.target_x,parameters.target_y) then
      validity = "impossible"
      details = _"You can't tell if that hex is occupied."
    elseif unit and wesnoth.is_enemy(unit.side, actor.side) then
      validity = "impossible"
    end
    return {
      short_name = _"ally or hex",
      name = _"Ally or empty hex",
      details = details,
      validity = validity
    }
  end,
  
  affected_hexes = function(parameters)
    return {{x=parameters.target_x,y=parameters.target_y,visual="help",require_no_invisible_enemy=true}}
  end,
  
  happen = function(parameters)
    local actor = EoHS.get_unit(parameters.actor_id)
    EoHS.begin_casting(parameters.actor_id, parameters.target_x, parameters.target_y)
    wesnoth.fire("sound", { name = "magic-holy-miss-2.ogg" })
    EoHS.set_circle_of_protection(parameters.target_x, parameters.target_y, actor.side)
    EoHS.finish_casting(parameters.actor_id)
  end,
})

>>)}
