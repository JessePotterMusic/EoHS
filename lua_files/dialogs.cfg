{EOHS_LUA_FILE (<<-- dialogs.cfg
-- #textdomain wesnoth-Era_of_High_Sorcery


EoHS.make_dialog_context = function(enter_callback, cancel_callback)
  local preshow_list = {}
  local preshow = function(func) table.insert(preshow_list, func) end
  local preshow_func = function() for i,func in ipairs(preshow_list) do func() end end
  
  local postshow_list = {}
  local postshow = function(func) table.insert(postshow_list, func) end
  local postshow_func = function() for i,func in ipairs(postshow_list) do func() end end
  
  local button_list = {}
  button_list[-1] = enter_callback
  button_list[-2] = cancel_callback
  local make_button_return_value = function(func)
    table.insert(button_list, func)
    return #button_list
  end
  
  local next_id_number = 0
  local make_unique_id = function()
    next_id_number = next_id_number + 1
    return "dialog_context_fiat_id_"..next_id_number
  end
  return {
    preshow = preshow,
    postshow = postshow,
    make_button_return_value = make_button_return_value,
    button = function(wml_table, func)
      local result = EoHS.deep_copy(wml_table)
      result.return_value = make_button_return_value(func)
      return {"button",result}
    end,
    label_with_validity = function(validity, wml_table)
      local result = EoHS.deep_copy(wml_table)
      if not result.id then
        result.id = make_unique_id()
      end
      local colour
      if validity == "valid" then
        colour = "#99FF99"--"200, 255, 200, 255"
      elseif validity == "undesirable" then
        colour = "#CCCC00"--"200, 200, 0, 255"
      elseif validity == "impossible" then
        colour = "#CC0000"--"155, 0, 0, 255"
      else
        EoHS.err("invalid validity")
      end
      
      preshow(function()
        wesnoth.set_dialog_canvas(1, { {"text",{
                  x = "0",
                  y = "0",
                  w = "(text_width)",
                  h = "(text_height)",
                  font_size = 14,
                  --colour = colour,
                  text = "<span color='"..colour.."'>"..result.label.."</span>",
                  text_markup = true,
        }} }, result.id)
      end)
      return {"label",result}
    end,
    show = function(resolution)
      --EoHS.err(wesnoth.debug(resolution))
      button_list[wesnoth.show_dialog(resolution, preshow_func, postshow_func)]()
    end,
  }
end

--[[
EoHS.dialog_grid = function(rows, columns, ...)
  local result = { "grid", {} }
  for r = 1, rows do
    local row = { "row", {} }
    for c = 1, columns do
      local column = { "column", {} }
      local idx = (r-1)*columns + c
      if idx > arg[n] then
      table.insert(column[2], arg[idx])
      table.insert(row[2], column)
    end
    table.insert(result[2], row)
  end
  return result
end
]]

>>)}
