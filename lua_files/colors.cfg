this_parses_in_both_wml_and_lua=hackily--{EOHS_LUA_FILE (<<-- colors.cfg
-- #textdomain wesnoth-Era_of_High_Sorcery
local getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack = getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack
local wesnoth,table,string,math,os,debug,helper,_,EoHS,_G,_ENV = wesnoth,table,string,math,os,debug,EoHS.helper,EoHS._,EoHS,_G,nil


EoHS.validity_color = function(valid)
  if valid then
    return EoHS.valid_color
  else
    return EoHS.invalid_color
  end
end
EoHS.darkened_color = function (color)
  local fraction = 160/221
  return {red = math.floor (color.red*fraction + 0.5), green = math.floor (color.green*fraction + 0.5), blue = math.floor (color.blue*fraction + 0.5)}
end
EoHS.valid_color = {red = 221, green = 221, blue = 221}
EoHS.invalid_color = {red = 255, green = 0, blue = 0}
EoHS.bad_color = {red = 255, green = 200, blue = 0}
EoHS.mediocre_color = EoHS.darkened_color (EoHS.valid_color)
EoHS.nonfunctional_color = EoHS.darkened_color (EoHS.valid_color)
EoHS.immune_color = {red = 128, green = 128, blue = 255}
EoHS.mana_color = {red = 220, green = 150, blue = 255}
EoHS.white_color = {red = 255, green = 255, blue = 255}
EoHS.gold_depleted_color = {red = 200, green = 200, blue = 0}
EoHS.mana_depleted_color = {red = 210, green = 100, blue = 0}


EoHS.dialog_color = function (color)
  return string.format ("%d, %d, %d, 255", color.red, color.green, color.blue)
end
EoHS.label_color = function (color)
  return string.format ("%d,%d,%d", color.red, color.green, color.blue)
end
EoHS.element_color = function (color)
  return string.format ("#%02x%02x%02x", color.red, color.green, color.blue)
end

EoHS.colored_text = function (color, text)
  return '<span color="'.. EoHS.element_color (color) ..'">'..text..'</span>'
end


local color_index = {}
for i,entry in ipairs(wesnoth.get_variable("EoHS.wesnoth_cfgs.team_colors")) do
  if entry[1] == "color_range" then
    local r,g,b = string.match(entry[2].rgb, "^(..)(..)(..)")
    color_index[tostring(entry[2].id)] = { r=tonumber(r,16), g=tonumber(g,16), b=tonumber(b,16)}
  end
end
EoHS.TC_like_CS = function(side, channel_func)
  local rgb = color_index[wesnoth.sides[side].color]
  local r = channel_func and channel_func(rgb.r) or rgb.r
  local g = channel_func and channel_func(rgb.g) or rgb.g
  local b = channel_func and channel_func(rgb.b) or rgb.b
  return "~CS("..r..","..g..","..b..")"
end

-->>)}
